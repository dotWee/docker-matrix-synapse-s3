name: debug

on:
  workflow_dispatch:
    inputs:
      build_with_cache:
        description: 'Enable docker build cache'
        required: false
        default: "false"
     
      docker_tag_latest:
        description: 'Add latest tag to docker images'
        required: false
        default: "true"
       
      push_docker_images:
        description: 'Push built docker images to docker hub'
        required: false
        default: "false"
      
      update_dockerhub_readme:
        description: 'Update the README hosted on the docker hub project site'
        required: false
        default: "false"

      synapse_storage_provider_commit:
        description: 'Commit hash of synapse-s3-storage-provider'
        required: false
        default: "main"
        
      synapse_version_name:
        description: 'Name of synapse release version (eg: v1.42.0)'
        required: true
        default: "v1.42.0"
        
      create_github_release_tag:
        description: 'Create a github repository release tag'
        required: false
        default: "false"

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      #- name: Echo variables
      #  run: echo "docker_tag_latest=${{ github.event.inputs.docker_tag_latest }} push_docker_images=${{ github.event.inputs.push_docker_images }} update_dockerhub_readme=${{ github.event.inputs.update_dockerhub_readme }} synapse_version_name=${{ github.event.inputs.synapse_version_name }} create_github_release_tag=${{ github.event.inputs.create_github_release_tag }}"
        
      - name: Cache Docker layers
        uses: actions/cache@v3
        if: ${{ github.event.inputs.build_with_cache == 'true' }}
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            dotwee/matrix-synapse-s3
            ghcr.io/dotwee/matrix-synapse-s3
          flavor: |
            latest=${{ github.event.inputs.docker_tag_latest == 'true' || github.event.inputs.synapse_version_name == 'latest' }}
          tags: |
            type=raw,value=${{ github.event.inputs.synapse_version_name }}
            type=semver,pattern={{raw}},value=${{ github.event.inputs.synapse_version_name }}
          labels: |
            maintainer=Lukas Wolfsteiner <lukas@wolfsteiner.media>
            org.opencontainers.image.title=matrix-synapse-s3
            
      - name: Echo docker metadata
        run: |
          echo "labels=${{ steps.meta.outputs.labels }}"
          echo "tags=${{ steps.meta.outputs.tags }}"
        
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ github.event.inputs.push_docker_images == 'true' }}
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: ${{ github.event.inputs.push_docker_images == 'true' }}
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_REGISTRY_USERNAME }}
          password: ${{ secrets.GH_REGISTRY_TOKEN }}

      - name: Build and push docker image with version tag
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          build-args: |
            SYNAPSE_VERSION=${{ github.event.inputs.synapse_version_name }}
            SYNAPSE_S3_STORAGE_PROVIDER_COMMIT=${{ github.event.inputs.synapse_storage_provider_commit }}
          push: ${{ github.event.inputs.push_docker_images == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Update Docker Hub repository description
        uses: peter-evans/dockerhub-description@v3
        if: ${{ github.event.inputs.update_dockerhub_readme == 'true' }}
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          repository: dotwee/matrix-synapse-s3

      - name: Create a GitHub repository release tag
        uses: marvinpinto/action-automatic-releases@latest
        if: ${{ github.event.inputs.create_github_release_tag == 'true' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: ${{ github.event.inputs.synapse_version_name }}
          prerelease: ${{ contains(github.event.inputs.synapse_version_name, 'rc') }}
          automatic_release_tag: ${{ github.event.inputs.synapse_version_name }}
